'use server';

/**
 * @fileOverview AI response generation flow that combines information from web search results and its own knowledge.
 *
 * - generateResponse - A function that generates a comprehensive response by synthesizing information from search results and internal knowledge.
 * - GenerateResponseInput - The input type for the generateResponse function.
 * - GenerateResponseOutput - The return type for the generateResponse function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateResponseInputSchema = z.object({
  query: z.string().describe('The user query.'),
  searchResults: z.array(
    z.object({
      title: z.string().describe('The title of the search result.'),
      url: z.string().describe('The URL of the search result.'),
      content: z.string().describe('The content snippet of the search result.'),
    })
  ).optional().describe('The list of search results.'),
});
export type GenerateResponseInput = z.infer<typeof GenerateResponseInputSchema>;

const GenerateResponseOutputSchema = z.object({
  response: z.string().describe('The comprehensive response generated by the AI.'),
});
export type GenerateResponseOutput = z.infer<typeof GenerateResponseOutputSchema>;

export async function generateResponse(input: GenerateResponseInput): Promise<GenerateResponseOutput> {
  return generateResponseFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateResponsePrompt',
  input: {schema: GenerateResponseInputSchema},
  output: {schema: GenerateResponseOutputSchema},
  prompt: `You are an AI assistant that provides brief, direct answers to user queries, combining web search results with your own knowledge.\n\n{% if searchResults %}\nHere are some search results that may be relevant:\n  {% for result in searchResults %}\n    Title: {{result.title}}\n    URL: {{result.url}}\n    Content: {{result.content}}\n  {% endfor %}\n{% endif %}\n\nUser Query: {{query}}\n\nInstructions:\n1. Synthesize the information to give a concise and direct answer to the user's query.\n2. Keep the response short and to the point.\n3. Cite sources if you use them.\n\nResponse:
`,
});

const generateResponseFlow = ai.defineFlow(
  {
    name: 'generateResponseFlow',
    inputSchema: GenerateResponseInputSchema,
    outputSchema: GenerateResponseOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return {response: output!.response};
  }
);
