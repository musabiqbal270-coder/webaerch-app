'use server';

/**
 * @fileOverview AI response generation flow that combines information from web search results and its own knowledge.
 *
 * - generateResponse - A function that generates a comprehensive response by synthesizing information from search results and internal knowledge.
 * - GenerateResponseInput - The input type for the generateResponse function.
 * - GenerateResponseOutput - The return type for the generateResponse function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateResponseInputSchema = z.object({
  query: z.string().describe('The user query.'),
  searchResults: z.array(
    z.object({
      title: z.string().describe('The title of the search result.'),
      url: z.string().describe('The URL of the search result.'),
      content: z.string().describe('The content snippet of the search result.'),
    })
  ).optional().describe('The list of search results.'),
});
export type GenerateResponseInput = z.infer<typeof GenerateResponseInputSchema>;

const GenerateResponseOutputSchema = z.object({
  response: z.string().describe('The comprehensive response generated by the AI.'),
});
export type GenerateResponseOutput = z.infer<typeof GenerateResponseOutputSchema>;

export async function generateResponse(input: GenerateResponseInput): Promise<GenerateResponseOutput> {
  return generateResponseFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateResponsePrompt',
  input: {schema: GenerateResponseInputSchema},
  output: {schema: GenerateResponseOutputSchema},
  prompt: `You are an AI assistant that generates comprehensive answers to user queries by combining information from web search results and your own knowledge.\n\n{% if searchResults %}\nHere are some search results that may be relevant to the query:\n  {% for result in searchResults %}\n    Title: {{result.title}}\n    URL: {{result.url}}\n    Content: {{result.content}}\n  {% endfor %}\n{% endif %}\n\nUser Query: {{query}}\n\nInstructions:\n1.  Synthesize information from the search results and your own knowledge to generate a comprehensive answer.\n2.  Cite the sources of information where appropriate.\n3.  If the search results do not fully answer the query, use your own knowledge to fill in the gaps.\n4.  Be detailed, accurate, and well-structured.\n\nResponse:
`,
});

const generateResponseFlow = ai.defineFlow(
  {
    name: 'generateResponseFlow',
    inputSchema: GenerateResponseInputSchema,
    outputSchema: GenerateResponseOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return {response: output!.response};
  }
);
